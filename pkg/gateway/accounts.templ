package gateway

import (
	"fmt"
	"github.com/verifa/horizon/pkg/extensions/accounts"
	"github.com/verifa/horizon/pkg/extensions/serviceaccounts"
)

templ home() {
	<div class="prose prose-a:no-underline mx-auto max-w-7xl px-8 py-8">
		<h1>Horizon</h1>
		<p>Welcome to Horizon, the gateway to your infrastructure.</p>
		<h2>Accounts</h2>
		<p>Horizon is a multi-tenant system. Each tenant is represented by an account. You can create new accounts, and manage users and resources within each account.</p>
		<a role="button" href="/accounts" class="btn">To Accounts</a>
	</div>
}

templ accountsPage(accounts []accounts.Account) {
	<div class="prose prose-a:no-underline mx-auto max-w-7xl px-8 py-8">
		<h1>Accounts</h1>
		if len(accounts) > 0 {
			<ul role="list" class="divide-y divide-gray-100">
				for _, account := range accounts {
					<li class="py-4"><a href={ templ.URL("/accounts/" + account.Name) }>{ account.Name }</a></li>
				}
			</ul>
		} else {
			<p>No accounts found</p>
		}
		<a role="button" href="/accounts/new" class="btn">New Account</a>
	</div>
}

templ accountPage() {
	<h1>Dashboard!</h1>
}

templ serviceAccountsPage(account string) {
	<div class="prose md:prose-lg lg:prose-xl xl:prose-2xl">
		<h1>Service Accounts</h1>
		<table class="table">
			<thead>
				<tr>
					<th>Name</th>
					<th>Ready</th>
					<th></th>
				</tr>
			</thead>
			<tbody
				hx-get={ "/accounts/" + account + "/serviceaccounts" }
				hx-trigger="load, every 5s, loadServiceAccounts from:body"
				hx-swap="innerHTML"
			></tbody>
		</table>
		@serviceAccountsForm(account, serviceaccounts.ServiceAccount{}, nil)
	</div>
}

templ serviceAccountsTableBody(account string, serviceAccounts []serviceaccounts.ServiceAccount) {
	if len(serviceAccounts) == 0 {
		<tr>
			<td colspan="2">No service accounts found</td>
		</tr>
	} else {
		for _, sa := range serviceAccounts {
			<tr
				hx-confirm="Are you sure?"
				hx-swap="outerHTML swap:1s"
			>
				<td>{ sa.Name }</td>
				<td>{ isReady(sa.Status) }</td>
				<td>
					// <a href={ templ.URL("/accounts/" + account + "/serviceaccounts/" + sa.Name) } class="btn btn-info btn-xs">
					// 	@iconChevronUpDown(3)
					// </a>
					<button class="btn btn-error btn-xs" hx-delete={ "/accounts/" + account + "/serviceaccounts/" + sa.Name }>
						@iconTrash(3)
					</button>
				</td>
			</tr>
		}
	}
}

templ iconChevronUpDown(size int) {
	<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class={ fmt.Sprintf("w-%d h-%d", size, size) }>
		<path stroke-linecap="round" stroke-linejoin="round" d="M8.25 15 12 18.75 15.75 15m-7.5-6L12 5.25 15.75 9"></path>
	</svg>
}

templ iconTrash(size int) {
	<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class={ fmt.Sprintf("w-%d h-%d", size, size) }>
		<path stroke-linecap="round" stroke-linejoin="round" d="m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0"></path>
	</svg>
}

templ serviceAccountsForm(account string, sa serviceaccounts.ServiceAccount, err error) {
	<form hx-post={ "/accounts/" + account + "/serviceaccounts" } hx-swap="outerHTML">
		<label class="label" for="serviceaccount-name"><span class="label-text">Name</span></label>
		<input
			type="text"
			placeholder="e.g. bob"
			id="serviceaccount-name"
			name="serviceaccount-name"
			class="input input-bordered w-full max-w-xs"
			value={ sa.Name }
		/>
		<button type="submit" class="btn">Submit</button>
		if err != nil {
			<p class="text-error">{ "Error: " + err.Error() }</p>
		}
	</form>
}

func isReady(status *serviceaccounts.ServiceAccountStatus) string {
	if status == nil {
		return "Not ready"
	}
	if status.Ready {
		return "Ready"
	}
	return "Not ready"
}

templ accountsNewPage() {
	<div class="prose prose-a:no-underline mx-auto max-w-7xl px-8 py-8">
		<h1>New Account</h1>
		<form hx-post="/accounts"><label class="label"><span class="label-text">Name</span></label><input type="text" placeholder="e.g. team-123" id="account-name" name="account-name" class="input input-bordered w-full max-w-xs"/><button type="submit" class="btn">Submit</button></form>
	</div>
}
