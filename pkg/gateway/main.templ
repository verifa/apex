package gateway

import (
	"fmt"
	"github.com/verifa/horizon/pkg/extensions/accounts"
	"github.com/verifa/horizon/pkg/hz"
	"github.com/verifa/horizon/pkg/sessions"
)

templ layout(title string, userInfo *sessions.UserInfo, body templ.Component) {
	<!DOCTYPE html>
	<html lang="en" data-theme="lofi">
		<head>
			<meta charset="utf-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			<title>{ title }</title>
			<script src="/dist/htmx.js"></script>
			<script src="/dist/htmx-ext-response-targets.js"></script>
			<script src="/dist/_hyperscript.js"></script>
			<link href="/dist/tailwind.css" rel="stylesheet"/>
		</head>
		<body>
			<header>
				@nav(userInfo)
			</header>
			<main>
				@body
			</main>
		</body>
	</html>
}

// accountLayout is a layout for pages within an account.
// It shows the sidebar with the extensions/actors installed.
templ accountLayout(account string, portals map[string]hz.Portal, body templ.Component) {
	<div class="drawer drawer-open">
		<input id="account-drawer" type="checkbox" class="drawer-toggle"/>
		<div class="drawer-content p-8">
			@body
		</div>
		<div class="drawer-side">
			<label for="account-drawer" class="drawer-overlay"></label>
			<ul class="menu p-4 w-80 min-h-full bg-base-200 text-base-content">
				<li>
					<a href={ templ.URL("/accounts/" + account) } class="text-primary">
						@iconComputerDesktop()
						Dashboard
					</a>
				</li>
				<li>
					<a href={ templ.URL("/accounts/" + account + "/users") }>
						@iconUsers()
						Users
					</a>
				</li>
				<hr class="my-2"/>
				for name, ext := range portals {
					<li>
						<a href={ templ.URL("/accounts/" + account + "/" + name) }>
							@iconRender(ext.Spec.Icon)
							{ ext.Spec.DisplayName }
						</a>
					</li>
				}
			</ul>
		</div>
	</div>
}

templ nav(userInfo *sessions.UserInfo) {
	<div class="navbar bg-primary">
		<div class="flex-1"><a href="/" class="btn btn-ghost normal-case text-xl text-primary-content">Horizon</a></div>
		if userInfo != nil {
			<div class="flex-none"><button class="btn btn-primary-content" hx-get="/logout">Logout</button></div>
		} else {
			<div class="flex-none"><a class="btn btn-primary-content" href="/login">Login</a></div>
		}
	</div>
}

templ accountsPage(accounts []*accounts.Account) {
	<div class="prose prose-a:no-underline mx-auto max-w-7xl px-8 py-8">
		<h1>Accounts</h1>
		if len(accounts) > 0 {
			<ul role="list" class="divide-y divide-gray-100">
				for _, account := range accounts {
					<li class="py-4"><a href={ templ.URL("/accounts/" + account.Name) }>{ account.Name }</a></li>
				}
			</ul>
		} else {
			<p>No accounts found</p>
		}
		<a role="button" href="/accounts/new" class="btn">New Account</a>
	</div>
}

templ accountPage() {
	<h1>Dashboard!</h1>
}

templ accountUsersPage(account string) {
	<h1>Users</h1>
	<form hx-post={ "/accounts/" + account + "/userconfig" } hx-target="#user-creds">
		<label class="label"><span class="label-text">Name</span></label>
		<input type="text" placeholder="e.g. bob" id="user-name" name="user-name" class="input input-bordered w-full max-w-xs"/>
		<button type="submit" class="btn">Submit</button>
		<div id="user-creds" class="whitespace-pre-wrap"></div>
	</form>
}

templ accountsNewPage() {
	<div class="prose prose-a:no-underline mx-auto max-w-7xl px-8 py-8">
		<h1>New Account</h1>
		<form hx-post="/accounts"><label class="label"><span class="label-text">Name</span></label><input type="text" placeholder="e.g. team-123" id="account-name" name="account-name" class="input input-bordered w-full max-w-xs"/><button type="submit" class="btn">Submit</button></form>
	</div>
}

templ actorProxyPage(account string, actor string, subpath string) {
	if subpath == "" {
		<div hx-get={ fmt.Sprintf("/actors/%s/%s", account, actor) } hx-trigger="load"><span class="loading loading-infinity loading-lg"></span></div>
	} else {
		<div hx-get={ fmt.Sprintf("/actors/%s/%s/%s", account, actor, subpath) } hx-trigger="load"><span class="loading loading-infinity loading-lg"></span></div>
	}
}

templ loggedOutPage() {
	<div class="prose prose-a:no-underline mx-auto max-w-7xl px-8 py-8">
		<h1>Logged out</h1>
		<p>You have been logged out.</p>
	</div>
}
